<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--加载配置文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
<!--    springmvc-->
    <context:component-scan base-package="com.xu.controller" />
    <mvc:annotation-driven />

    <mvc:resources location="/easyui/" mapping="/easyui/**"/>
    <mvc:resources location="/js/" mapping="/js/**"/>

    <!--连接池    -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${jdbc.driverClass}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

        <property name="maxActive" value="10"/>
        <property name="maxIdle" value="5"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--加载核心配置文件（除非使用逆向工程，一般不用加载）        -->
        <property name="configLocation" value="classpath:SqlMapperConfig.xml"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath*:com/xu/dao/*.xml" />
        <property name="typeAliasesPackage" value="com.xu.domain"/>

        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor"/>
            </array>
        </property>
    </bean>

    <!--    ?????????????????????????????????????????????????????????????????    -->
    <!--    传统dao配置-->
    <!--    <bean id="userDaoImpl" class="com.xu.mybatis.dao.impl.UserDaoImpl">-->
    <!--        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>-->
    <!--    </bean>-->

    <!--    官方推荐的动态代理dao-->
    <!--    <bean id="baseMapper" class="org.mybatis.spring.mapper.MapperFactoryBean" abstract="true" >-->
    <!--        -->
    <!--    </bean>-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.xu.dao"/>
    </bean>


    <!--    service-->
    <context:component-scan base-package="com.xu.service.impl" />
<!--    &lt;!&ndash;    配置平台事务管理器&ndash;&gt;-->
<!--    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
<!--        &lt;!&ndash;配置了连接才能管理事务&ndash;&gt;-->
<!--        <property name="dataSource" ref="dataSource"/>-->
<!--    </bean>-->

<!--    &lt;!&ndash;    配置事务管理的模板&ndash;&gt;-->
<!--    <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">-->
<!--        <property name="transactionManager" ref="transactionManager"/>-->
<!--    </bean>-->

<!--    &lt;!&ndash;    AOP声明式事务的配置&ndash;&gt;-->
<!--    <tx:advice transaction-manager="transactionManager" id="txAdvice">-->
<!--        <tx:attributes>-->
<!--            &lt;!&ndash;事务管理的规则&ndash;&gt;-->
<!--            <tx:method name="transfer*" propagation="REQUIRED" isolation="DEFAULT"/>-->
<!--            <tx:method name="save*" propagation="REQUIRED"/>-->
<!--            <tx:method name="delete*" propagation="REQUIRED"/>-->
<!--            <tx:method name="find*" read-only="true"/>-->
<!--        </tx:attributes>-->
<!--    </tx:advice>-->
<!--    &lt;!&ndash;    AOP的配置&ndash;&gt;-->
<!--    <aop:config>-->
<!--        <aop:pointcut id="pointcut1" expression="execution(* com.xu.tx.service.AccountServiceImpl.*(..))"/>-->
<!--        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut1"/>&lt;!&ndash;aspect是多个，advisor是一个&ndash;&gt;-->
<!--    </aop:config>-->

<!--    shiro-->
    <import resource="application01-shiro.xml" />

</beans>
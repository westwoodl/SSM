<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xu.mybatis.dao.OrderDao">
<!--    sql片段-->
    <sql id="order_sql">
            `id`,
            `user_id`
            `number`,
            `createtime`,
            `note`
    </sql>
    <select id="getOrderById" parameterType="int" resultMap="order_list_map">
        SELECT
            <include refid="order_sql"/>
        FROM
            `order`
<!--    if和where标签-->
        <where>
            <if test="id != 0 and id !=null">
                `id` = #{id}
            </if>
            <if test="id = 0 or id ==null">
                `id` = 3
            </if>
        </where>
<!--    foreach标签，可以遍历实体类中的列表-->

    </select>
    <resultMap id="order_list_map" type="order">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <!--在这里使用了resultMap解决了实体类和数据库表属性不一致的问题-->
    </resultMap>

<!--    一对一的关联查询-->
    <select id="getOrderUser" resultMap="order_user_map">
        SELECT
            o.`id`,
            o.`user_id`,
            o.`number`,
            o.`createtime`,
            o.`note` ,
            u.`username`,
            u.`address`,
            u.`birthday`
        FROM
            `order` o
                LEFT JOIN `user` u ON u.`id`=o.`user_id`
    </select>
    <resultMap id="order_user_map" type="order">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="number" column="number"/>
        <result property="createtime" column="createtime"/>
        <result property="note" column="note"/>
        <!--association用于配置一对一关系-->
        <association property="user" javaType="user">
            <id property="id" column="user_id"/>
            <result property="username" column="username"/>
            <result property="birthday" column="birthday"/>
        </association>
    </resultMap>

<!--    一对多的关联查询-->
    <select id="getUserOrderWithResultMap" resultMap="user_order_map">
        SELECT
            u.`id`,
            u.`username`,
            u.`birthday`,
            u.`sex`,
            u.`address`,
            o.`id` oid,
            o.`createtime`,
            o.`number`,
            o.`note`
        FROM
            `user` u
                LEFT JOIN `order` o ON u.`id`=o.`user_id`
    </select>
    <resultMap id="user_order_map" type="user">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="birthday" column="birthday"/>
        <result property="sex" column="sex"/>
        <result property="address" column="address"/>
        <!--collection配置一对多，注意使用的是ofType-->
        <collection property="orderList" ofType="order">
            <id property="id" column="oid"/>
            <result property="userId" column="id"/>
            <result property="createtime" column="createtime"/>
            <result property="number" column="number"/>
        </collection>
    </resultMap>
</mapper>